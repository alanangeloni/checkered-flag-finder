
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vxkzrgsseeiuamimxiih.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ4a3pyZ3NzZWVpdWFtaW14aWloIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY2Nzk3NDgsImV4cCI6MjA2MjI1NTc0OH0.ojLHy-T6jH0Y0hPEa4i66Cz7j3NahF-yUdJATbQXSTU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a singleton instance of the Supabase client
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Check if the required storage bucket exists and ensure proper access
(async () => {
  try {
    console.log('Checking storage buckets...');
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    
    if (bucketsError) {
      console.error('Error listing buckets:', bucketsError);
      return;
    }
    
    console.log('Available buckets:', buckets?.map(b => b.name));
    const carImagesBucketExists = buckets?.some(bucket => bucket.name === 'car_images');
    
    if (!carImagesBucketExists) {
      console.warn('Warning: car_images bucket does not exist. Please create it in the Supabase dashboard.');
    } else {
      console.log('car_images bucket exists');
      
      // Test bucket access by listing contents
      const { data: files, error: listError } = await supabase.storage.from('car_images').list();
      if (listError) {
        console.error('Error accessing car_images bucket:', listError);
      } else {
        console.log(`Successfully accessed car_images bucket. Contains ${files.length} files.`);
      }
    }
  } catch (error) {
    console.error('Error checking storage buckets:', error);
  }
})();
