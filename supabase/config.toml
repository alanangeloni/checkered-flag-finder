
# A string used to distinguish different Supabase projects on the same host. Defaults to the working
# directory name when running `supabase init`.
project_id = "racecar_marketplace"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage", "extensions"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by database to listen for connections.
major_version = 15

[studio]
# Port to use for Supabase Studio.
port = 54323

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54324
smtp_port = 54325
pop3_port = 54326

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Configure one of the supported auth providers.
# [auth.external.apple]
# enabled = false
# client_id = ""
# secret = ""
# scopes = ["account", "name"]
# generate_state_for_pkce = true # Should be true for security best practices to prevent cross site request forgery.
# redirect_url = ""

# [auth.external.azure]
# enabled = false
# client_id = ""
# secret = ""
# url = "https://login.microsoftonline.com/{tenant}/oauth2/v2.0/authorize"
# token_url = "https://login.microsoftonline.com/{tenant}/oauth2/v2.0/token"
# scopes = ["openid", "profile", "email"]
# generate_state_for_pkce = true
# redirect_url = ""

# [auth.external.bitbucket]
# enabled = false
# client_id = ""
# secret = ""
# generate_state_for_pkce = true

# [auth.external.discord]
# enabled = false
# client_id = ""
# secret = ""
# scopes = ["identify", "email"]
# generate_state_for_pkce = true

# [auth.external.facebook]
# enabled = false
# client_id = ""
# secret = ""
# scopes = ["email"]
# generate_state_for_pkce = true
# redirect_url = ""

# [auth.external.github]
# enabled = false
# client_id = ""
# secret = ""
# scopes = []
# generate_state_for_pkce = true
# redirect_url = ""

# [auth.external.gitlab]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# url = "https://gitlab.com"
# scopes = ["read_user"]
# generate_state_for_pkce = true

# [auth.external.google]
# enabled = false
# client_id = ""
# secret = ""
# scopes = ["email", "profile"]
# generate_state_for_pkce = true
# redirect_url = ""
# url = "https://accounts.google.com/o/oauth2/v2/auth"

# [auth.external.keycloak]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# url = "http://localhost:8080/auth/realms/master/protocol/openid-connect/auth"
# scopes = ["openid", "profile", "email"]
# generate_state_for_pkce = true

# [auth.external.linkedin]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# scopes = ["profile", "email"]
# generate_state_for_pkce = true

# [auth.external.notion]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# scopes = []
# generate_state_for_pkce = true

# [auth.external.twitch]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# scopes = ["user:read:email"]
# generate_state_for_pkce = true

# [auth.external.twitter]
# enabled = false
# client_id = ""
# secret = ""
# generate_state_for_pkce = true
# redirect_url = ""

# [auth.external.spotify]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# scopes = ["user-read-email"]
# generate_state_for_pkce = true

# [auth.external.slack]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# scopes = ["openid", "email", "profile"]
# generate_state_for_pkce = true

# [auth.external.workos]
# enabled = false
# client_id = ""
# secret = ""
# redirect_url = ""
# connection = ""
# organization = ""
# provider = ""
# generate_state_for_pkce = true

[[storage.buckets]]
name = "car-images"
public = true
file_size_limit = "10MB" 
allowed_mime_types = ["image/png", "image/jpeg", "image/jpg", "image/gif"]

[[storage.buckets]]
name = "blog_images"
public = true
file_size_limit = "5MB"

[analytics]
enabled = false
port = 54327
vector_port = 54328
# Setup BigQuery project to enable log viewer on local development stack.
# See: https://logflare.app/guides/bigquery-setup
gcp_project_id = ""
gcp_project_number = ""
gcp_jwt_path = "supabase/gcloud.json"
